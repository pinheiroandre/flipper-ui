{"version":3,"sources":["/home/nginfo/DEV/flipper-ui/src/core/RadioGroup.tsx","/home/nginfo/DEV/flipper-ui/src/docz/RadioGroup.mdx"],"names":["RadioGroup","_ref","_ref$options","options","className","padding","margin","_ref$style","style","title","value","onChange","otherProps","Object","objectWithoutProperties","react_default","a","createElement","FormControl","assign","objectSpread","FormLabel","component","RadioGroup_RadioGroup","name","map","option","FormControlLabel","key","label","control","Radio","layoutProps","MDXLayout","MDXContent","components","props","index_es","mdxType","id","index_esm","of","__position","__code","__scope","this","Playground","Props","__codesandbox","core_RadioGroup","isMDXComponent"],"mappings":"ixBAkBMA,EAAyB,SAACC,GAAD,IAAAC,EAAAD,EAC3BE,eAD2B,IAAAD,EACjB,GADiBA,EAE3BE,EAF2BH,EAE3BG,UACAC,EAH2BJ,EAG3BI,QACAC,EAJ2BL,EAI3BK,OAJ2BC,EAAAN,EAK3BO,aAL2B,IAAAD,EAKnB,GALmBA,EAM3BE,EAN2BR,EAM3BQ,MACAC,EAP2BT,EAO3BS,MACAC,EAR2BV,EAQ3BU,SACGC,EATwBC,OAAAC,EAAA,EAAAD,CAAAZ,EAAA,sFAW3Bc,EAAAC,EAAAC,cAACC,EAAA,EAADL,OAAAM,OAAA,CACIf,UAAYA,EACZI,MAAKK,OAAAO,EAAA,EAAAP,CAAA,CAAKR,UAASC,UAAWE,IACzBI,GACLG,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAWC,UAAU,UAAWb,GAChCM,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACIC,KAAOA,KACPd,MAAQA,EACRC,SAAWA,GAEPR,EAAQsB,IAAI,SAAAC,GAAM,OACdX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CACIC,IAAMF,EAAOhB,MACbmB,MAAQH,EAAOG,MACfnB,MAAQgB,EAAOhB,MACfoB,QAAUf,EAAAC,EAAAC,cAACc,EAAA,EAAD,aAOnB/B,I,oQC5Cf,IAKMgC,EAAc,GAGdC,EAAY,UACH,SAASC,EAATjC,GAGX,IAFFkC,EAEClC,EAFDkC,WACGC,EACFvB,OAAAC,EAAA,EAAAD,CAAAZ,EAAA,gBACD,OAAOY,OAAAwB,EAAA,EAAAxB,CAACoB,EAADpB,OAAAM,OAAA,GAAea,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYG,QAAQ,cAE5EzB,OAAAwB,EAAA,EAAAxB,CAAA,KAAQ,CACN0B,GAAM,cADR,cAGA1B,OAAAwB,EAAA,EAAAxB,CAAA,KAAQ,CACN0B,GAAM,cADR,cAGA1B,OAAAwB,EAAA,EAAAxB,CAAC2B,EAAA,EAAD,CAAOC,GAAIzC,EAAYsC,QAAQ,UAC/BzB,OAAAwB,EAAA,EAAAxB,CAAA,KAAQ,CACN0B,GAAM,QADR,QAGA1B,OAAAwB,EAAA,EAAAxB,CAAC2B,EAAA,EAAD,CAAYE,WAAY,EAAGC,OAAQ,sQAA+QC,QAAS,CACzTR,MAAOS,KAAOA,KAAKT,MAAQA,EAC3BpC,aACA8C,eACAC,WACCC,cAAa,YAAeV,QAAQ,cACvCzB,OAAAwB,EAAA,EAAAxB,CAACoC,EAAD,CAAYvC,MAAM,QAAQD,MAAM,aAAae,KAAK,UAAUrB,QAAS,CAAC,CAClE0B,MAAO,eACPnB,MAAO,SACN,CACDmB,MAAO,gBACPnB,MAAO,WACLC,SAAU,aAAU2B,QAAQ,iB,6KAMtCJ,EAAWgB,gBAAiB","file":"static/js/src-docz-radio-group.f73fdd87.js","sourcesContent":["import {\n    FormControl,\n    FormControlLabel,\n    FormLabel,\n    Radio,\n    RadioGroup as MuiRadioGroup\n} from '@material-ui/core'\nimport React, { ChangeEvent, FC } from 'react'\nimport { IDefault } from './Advertise'\n\ninterface IProps extends IDefault {\n    title?: string\n    name: string\n    value?: string\n    options?: Array<{ value: string, label?: string }>\n    onChange?: (event: ChangeEvent<HTMLElement>) => void\n}\n\nconst RadioGroup: FC<IProps> = ({\n    options = [],\n    className,\n    padding,\n    margin,\n    style = {},\n    title,\n    value,\n    onChange,\n    ...otherProps\n}) =>\n    <FormControl\n        className={ className }\n        style={ { padding, margin, ...style } }\n        { ...otherProps }>\n        <FormLabel component='legend'>{ title }</FormLabel>\n        <MuiRadioGroup\n            name={ name }\n            value={ value }\n            onChange={ onChange }>\n            {\n                options.map(option =>\n                    <FormControlLabel\n                        key={ option.value }\n                        label={ option.label }\n                        value={ option.value }\n                        control={ <Radio /> }\n                    />\n                )\n            }\n        </MuiRadioGroup>\n    </FormControl>\n\nexport default RadioGroup\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport RadioGroup from '../core/RadioGroup'\nimport { Playground, Props } from 'docz'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"radiogroup\"\n    }}>{`RadioGroup`}</h1>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={RadioGroup} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h2>\n    <Playground __position={1} __code={'<RadioGroup\\n  value=\\\"first\\\"\\n  title=\\\"My options\\\"\\n  name=\\\"options\\\"\\n  options={[\\n    {\\n      label: \\'First option\\',\\n      value: \\'first\\',\\n    },\\n    {\\n      label: \\'Second Option\\',\\n      value: \\'second\\',\\n    },\\n  ]}\\n  onChange={() => {}}\\n/>'} __scope={{\n      props: this ? this.props : props,\n      RadioGroup,\n      Playground,\n      Props\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n    <RadioGroup value='first' title='My options' name='options' options={[{\n        label: 'First option',\n        value: 'first'\n      }, {\n        label: 'Second Option',\n        value: 'second'\n      }]} onChange={() => {}} mdxType=\"RadioGroup\" />\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}