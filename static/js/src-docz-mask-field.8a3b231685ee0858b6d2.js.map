{"version":3,"sources":["/home/nginfo/DEV/flipper-ui/src/core/InputAdornment.tsx","/home/nginfo/DEV/flipper-ui/src/core/ListItem.tsx","/home/nginfo/DEV/flipper-ui/src/core/TextField.tsx","/home/nginfo/DEV/flipper-ui/src/core/Typography.tsx","/home/nginfo/DEV/flipper-ui/src/core/MaskField.tsx","/home/nginfo/DEV/flipper-ui/src/docz/MaskField.mdx"],"names":["InputAdornment","_ref","children","otherProps","Object","_home_nginfo_DEV_flipper_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_material_ui_core__WEBPACK_IMPORTED_MODULE_1__","ListItem","this","props","react__WEBPACK_IMPORTED_MODULE_13___default","_Typography__WEBPACK_IMPORTED_MODULE_14__","_this$props","action","avatar","icon","title","subtitle","minWidth","className","classes","react__WEBPACK_IMPORTED_MODULE_13__","_material_ui_core__WEBPACK_IMPORTED_MODULE_6__","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","style","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","primaryTypographyProps","secondaryTypographyProps","primary","secondary","marginRight","_material_ui_core__WEBPACK_IMPORTED_MODULE_9__","_this$props2","id","value","_this$props2$style","padding","margin","selected","disabled","onClick","_material_ui_core__WEBPACK_IMPORTED_MODULE_10__","button","_home_nginfo_DEV_flipper_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","renderChildren","_material_ui_core__WEBPACK_IMPORTED_MODULE_11__","renderCustomItem","Component","withStyles","default","color","styles","input","fontSize","height","outlinedInput","outlinedLabel","transform","outlinedMultiline","_ref$style","error","_ref$variant","variant","_ref$InputLabelProps","InputLabelProps","_ref$InputProps","InputProps","_ref$autoComplete","autoComplete","_home_nginfo_DEV_flipper_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_4___default","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","assign","outlined","multiline","Typography","react__WEBPACK_IMPORTED_MODULE_3___default","MaskField","customInput","objectWithoutProperties","react_default","number_format_default","TextField","layoutProps","MDXLayout","MDXContent","components","index_es","mdxType","index_esm","of","__position","__code","__scope","Playground","Props","__codesandbox","core_MaskField","placeholder","fixedDecimalScale","decimalScale","label","decimalSeparator","thousandSeparator","startAdornment","position","shrink","isMDXComponent"],"mappings":"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","file":"static/js/src-docz-mask-field.32d20af5.js","sourcesContent":["import { InputAdornment as MuiInputAdornment } from '@material-ui/core'\nimport React, { FC } from 'react'\nimport { IDefault } from './Advertise'\n\nexport interface IProps extends IDefault {\n    position: 'start' | 'end'\n}\n\nconst InputAdornment: FC<IProps> = ({ children, ...otherProps }) =>\n    <MuiInputAdornment { ...otherProps }>\n        { children }\n    </MuiInputAdornment>\n\nexport default InputAdornment\n","import {\n    ListItem as MuiListItem,\n    ListItemAvatar as MuiListItemAvatar,\n    ListItemIcon as MuiListItemIcon,\n    ListItemSecondaryAction as MuiListItemSecondaryAction,\n    ListItemText as MuiListItemText,\n    MenuItem\n} from '@material-ui/core'\nimport { withStyles } from '@material-ui/styles'\nimport React, {\n    Component,\n    Fragment,\n    MouseEvent\n} from 'react'\nimport { IDefault } from './Advertise'\nimport Typography from './Typography'\nimport { Omit } from 'ramda'\n\ninterface IProps extends Omit<IDefault, 'name'> {\n    avatar?: JSX.Element\n    icon?: JSX.Element\n    action?: JSX.Element\n    title?: string | JSX.Element\n    subtitle?: string | JSX.Element\n    value?: string | number\n    classes: { default: string }\n    selected?: boolean\n    disabled?: boolean\n    onClick?: (event?: MouseEvent) => void\n}\n\nconst styles = () => ({\n    default: {\n        color: 'inherit'\n    }\n})\n\nclass ListItem extends Component<IProps, {}> {\n\n    private renderChildren () {\n        return (\n            typeof this.props.children === 'string'\n                ? (\n                    <Typography>\n                        { this.props.children }\n                    </Typography>\n                )\n                : this.props.children\n        )\n    }\n\n    private renderCustomItem() {\n        const {\n            action,\n            avatar,\n            icon,\n            title,\n            subtitle,\n            classes\n        } = this.props\n        const minWidth = title || subtitle ? '42px' : '0px'\n        const className = classes.default\n\n        return (\n            <Fragment>\n                {\n                    avatar && (\n                        <MuiListItemAvatar>\n                            { avatar }\n                        </MuiListItemAvatar>\n                    )\n                }\n                {\n                    icon && (\n                        <MuiListItemIcon\n                            className={ className }\n                            style={ { minWidth } }>\n                            { icon }\n                        </MuiListItemIcon>\n                    )\n                }\n                {\n                    (title || subtitle) && (\n                        <MuiListItemText\n                            primaryTypographyProps={ { className } }\n                            secondaryTypographyProps={ { className } }\n                            primary={ title }\n                            secondary={ subtitle }\n                            style={ action ? { marginRight: '36px' } : {} }\n                        />\n                    )\n                }\n                {\n                    action && (\n                        <MuiListItemSecondaryAction className={ className }>\n                            { action }\n                        </MuiListItemSecondaryAction>\n                    )\n                }\n            </Fragment>\n        )\n    }\n\n    public render() {\n        const {\n            id,\n            className,\n            children,\n            value,\n            style = {},\n            padding,\n            margin,\n            selected,\n            disabled,\n            onClick\n        } = this.props\n\n        return children\n            ? (\n                <MenuItem\n                    button\n                    id={ id }\n                    style={ { padding, margin, ...style } }\n                    className={ className }\n                    selected={ selected }\n                    disabled={ disabled }\n                    value={ value }\n                    onClick={ onClick }>\n                    { this.renderChildren() }\n                </MenuItem>\n            )\n            : (\n                <MuiListItem\n                    button\n                    id={ id }\n                    style={ { padding, margin, ...style } }\n                    className={ className }\n                    selected={ selected }\n                    disabled={ disabled }\n                    onClick={ onClick }>\n                    { this.renderCustomItem() }\n                </MuiListItem>\n            )\n    }\n}\n\nexport default withStyles(styles)(ListItem)\n","import { TextField as MuiTextField } from '@material-ui/core'\nimport { withStyles } from '@material-ui/styles'\nimport React, { ChangeEvent, KeyboardEvent, FC, FocusEvent } from 'react'\nimport { IDefault } from './Advertise'\n\nexport interface IProps extends IDefault {\n    autoComplete?: string\n    autoFocus?: boolean\n    defaultValue?: string | number\n    disabled?: boolean\n    error?: boolean\n    fullWidth?: boolean\n    id?: string\n    label?: string\n    placeholder?: string\n    multiline?: boolean\n    name?: string\n    required?: boolean\n    select?: boolean\n    type?: string\n    value?: string | number | boolean | string[]\n    variant?: 'standard' | 'outlined' | 'filled'\n    inputProps?: object\n    InputProps?: object\n    InputLabelProps?: object\n    SelectProps?: object\n    rows?: string | number\n    rowsMax?: string | number\n    helperText?: React.ReactNode\n    onChange?: (event: ChangeEvent<HTMLInputElement>) => void\n    onBlur?: (event: FocusEvent<HTMLInputElement>) => void\n    onKeyUp?: (event: KeyboardEvent) => void\n    onKeyDown?: (event: KeyboardEvent) => void\n}\n\nexport interface IClasses {\n    classes: {\n        outlinedInput: string\n        outlinedLabel: string\n        outlinedMultiline: string\n    }\n}\n\nexport const styles = () => ({\n    input: {\n        fontSize: '14px',\n        padding: '10px',\n        height: 'auto'\n    },\n    outlinedInput: {\n        fontSize: '14px',\n        padding: '10px',\n        height: 'auto'\n    },\n    outlinedLabel: {\n        fontSize: '14px',\n        transform: 'translate(14px, 13px) scale(1)'\n    },\n    outlinedMultiline: {\n        padding: '0px'\n    }\n})\n\nconst TextField: FC<IProps & IClasses> = ({\n    margin,\n    padding,\n    style = {},\n    error,\n    variant = 'outlined',\n    InputLabelProps = {},\n    InputProps = {},\n    classes,\n    autoComplete='off',\n    ...otherProps\n}) =>\n    <MuiTextField\n        autoComplete={ autoComplete }\n        error={ error }\n        variant={ variant as 'outlined' }\n        style={ {\n            margin,\n            padding,\n            ...style\n        } }\n        InputLabelProps={ {\n            classes: {\n                outlined: variant === 'outlined' ? classes.outlinedLabel : ''\n            },\n            ...InputLabelProps\n        } }\n        InputProps={ {\n            classes: {\n                input: variant === 'outlined' ? classes.outlinedInput : '',\n                multiline: variant === 'outlined' ? classes.outlinedMultiline : ''\n            },\n            ...InputProps\n        } }\n        { ...otherProps }\n    />\n\nexport default withStyles(styles)(TextField)\n","import { Typography as MuiTypography } from '@material-ui/core'\nimport React, { FC } from 'react'\nimport { IDefault } from './Advertise'\n\ninterface IProps extends IDefault {\n    noWrap?: boolean\n    variant?:\n        | 'h1'\n        | 'h2'\n        | 'h3'\n        | 'h4'\n        | 'h5'\n        | 'h6'\n        | 'subtitle1'\n        | 'subtitle2'\n        | 'body1'\n        | 'body2'\n        | 'caption'\n        | 'button'\n    color?:\n        | 'error'\n        | 'inherit'\n        | 'primary'\n        | 'secondary'\n        | 'textPrimary'\n        | 'textSecondary'\n    align?:\n        | 'inherit'\n        | 'left'\n        | 'center'\n        | 'right'\n        | 'justify'\n}\n\nconst Typography: FC<IProps> = ({\n    children,\n    margin,\n    padding,\n    style = {},\n    variant = 'body2',\n    ...otherProps\n}) =>\n    <MuiTypography\n        { ...otherProps }\n        variant={ variant }\n        style={ { margin, padding, ...style } }>\n        { children }\n    </MuiTypography>\n\nexport default Typography\n","import React, { Component } from 'react'\nimport TextField, { IProps } from './TextField'\nimport NumberFormat from 'react-number-format'\n\ninterface IMaskProps {\n    mask?: string\n    type?: 'text' | 'tel' | 'password'\n    decimalSeparator?: string\n    format?: string\n    decimalScale?: number\n    thousandSeparator?: boolean | string\n    fixedDecimalScale?: boolean\n    customInput?: typeof TextField\n}\n\nclass MaskField extends Component<IProps & IMaskProps> {\n    public render() {\n        const { customInput, ...otherProps } = this.props\n\n        return (\n            // Although react-number-format allow use of additional props,\n            // shows problem with some props like have been do this\n            // actually on flipper-ui. (e.g. errors treatment)\n            // @ts-ignore\n            <NumberFormat\n                { ...otherProps }\n                customInput={ customInput || TextField }>\n            </NumberFormat>\n        )\n    }\n}\n\nexport default MaskField\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport InputAdornment from '../core/InputAdornment'\nimport MaskField from '../core/MaskField'\nimport ListItem from '../core/ListItem'\nimport { Playground, Props } from 'docz'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"maskfield\"\n    }}>{`MaskField`}</h1>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={MaskField} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"simple-maskfield\"\n    }}>{`Simple MaskField`}</h2>\n    <Playground __position={1} __code={'<MaskField placeholder=\\\"Description\\\" />'} __scope={{\n      props: this ? this.props : props,\n      InputAdornment,\n      MaskField,\n      ListItem,\n      Playground,\n      Props\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n    <MaskField placeholder='Description' mdxType=\"MaskField\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"maskfield-with-inputadornment\"\n    }}>{`MaskField with InputAdornment`}</h2>\n    <Playground __position={2} __code={'<MaskField\\n  fixedDecimalScale\\n  decimalScale={2}\\n  label=\\\"Price\\\"\\n  decimalSeparator=\\\",\\\"\\n  thousandSeparator=\\\".\\\"\\n  InputProps={{\\n    startAdornment: <InputAdornment position=\\\"start\\\">$</InputAdornment>,\\n  }}\\n  InputLabelProps={{ shrink: true }}\\n/>'} __scope={{\n      props: this ? this.props : props,\n      InputAdornment,\n      MaskField,\n      ListItem,\n      Playground,\n      Props\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n    <MaskField fixedDecimalScale decimalScale={2} label='Price' decimalSeparator=',' thousandSeparator='.' InputProps={{\n        startAdornment: <InputAdornment position='start' mdxType=\"InputAdornment\">$</InputAdornment>\n      }} InputLabelProps={{\n        shrink: true\n      }} mdxType=\"MaskField\" />\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}