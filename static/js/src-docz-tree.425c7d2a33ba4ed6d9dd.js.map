{"version":3,"sources":["/home/nginfo/DEV/flipper-ui/src/colors.ts","/home/nginfo/DEV/flipper-ui/src/core/Node.tsx","/home/nginfo/DEV/flipper-ui/src/core/Tree.tsx","/home/nginfo/DEV/flipper-ui/src/docz/Tree.mdx","/home/nginfo/DEV/flipper-ui/src/icons/index.ts"],"names":["__webpack_require__","d","__webpack_exports__","primary","background","transparent","dark","light","normal","silver","medium","white","black","text","error","styles","icon","fontSize","marginRight","Ul","styled","ul","_templateObject","Li","li","_templateObject2","props","inset","Node","_this","Object","_home_nginfo_DEV_flipper_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_nginfo_DEV_flipper_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_nginfo_DEV_flipper_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","open","setState","evolve","not","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","_icons__WEBPACK_IMPORTED_MODULE_10__","style","_this$props","id","name","children","_this$props$style","className","key","Boolean","onClick","handleToggleOpen","bind","renderDropdownIcon","Component","Tree","node","index","root","arguments","length","undefined","nodes","react_default","padding","map","renderNode","layoutProps","MDXLayout","MDXContent","_ref","components","objectWithoutProperties","index_es","assign","mdxType","index_esm","of","__position","__code","__scope","Playground","Props","__codesandbox","core_Tree","isMDXComponent","_material_ui_icons__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"static/js/src-docz-tree.078b5d2f.js","sourcesContent":["export const primary = {\n    dark: '#00695C',\n    light: '#B2DFDB',\n    normal: '#009688'\n}\n\nexport const background = {\n    dark: '#BDBDBD',\n    light: '#EEEEEE',\n    normal: '#E5E5E5'\n}\n\nexport const silver = {\n    medium: '#666666'\n}\n\nexport const white = '#FFFFFF'\nexport const black = '#000000'\nexport const transparent = '#FFFFFF00'\nexport const text = '#424242'\nexport const error = {\n    dark: '#B71C1C',\n    light: '#F44336',\n    normal: '#D32F2F'\n}\n\nexport const warning = '#FFC107'\nexport const success = '#4CAF50'\n","import { evolve, not } from 'ramda'\nimport React, { Component } from 'react'\nimport styled from 'styled-components'\nimport { background, primary, transparent } from '../colors'\nimport {\n    KeyboardArrowDown as IconArrowDown,\n    KeyboardArrowUp as IconArrowUp\n} from '../icons'\nimport { IDefault } from './Advertise'\n\ninterface IProps extends IDefault {\n    name: string\n}\n\ninterface IState {\n    open: boolean\n}\n\ninterface IListItem {\n    inset: boolean\n}\n\nconst styles = {\n    icon: {\n        fontSize: '24px',\n        marginRight: '12px'\n    }\n}\n\nconst Ul = styled.ul`\n    width: 350px;\n`\n\nconst Li = styled.li<IListItem>`\n    font-size: 16px;\n    margin: 12px;\n    background: ${transparent};\n    padding: 12px;\n    padding-left: ${props => props.inset ? '12px' : '48px'};\n    list-style: none;\n    border-radius: 6px;\n    border: 1px solid ${background.dark};\n    transition: all 500ms ease;\n    cursor: pointer;\n    align-items: center;\n    display: flex;\n    &:hover {\n        background: ${background.light};\n        border: 1px solid ${primary.normal};\n    }\n`\n\nclass Node extends Component<IProps, IState> {\n    constructor(props) {\n        super(props)\n        this.state = { open: false }\n    }\n\n    public handleToggleOpen() {\n        this.setState(evolve({ open: not }))\n    }\n\n    public renderDropdownIcon() {\n        return this.state.open\n            ? <IconArrowUp style={ styles.icon } />\n            : <IconArrowDown style={ styles.icon } />\n    }\n\n    public render() {\n        const { open } = this.state\n        const { id, name, children, style = {}, className } = this.props\n\n        return (\n            <Ul\n                key={ id || name }\n                style={ style }\n                className={ className }>\n                <Li\n                    inset={ Boolean(children) }\n                    onClick={ this.handleToggleOpen.bind(this) }>\n                    { children && this.renderDropdownIcon() }\n                    { name }\n                </Li>\n                { open && children }\n            </Ul>\n        )\n    }\n}\n\nexport default Node\n","import React, { Component } from 'react'\nimport Node from './Node'\n\ninterface INode {\n    id: string | number\n    name: string\n    nodes?: INode[]\n}\n\ninterface IProps {\n    nodes?: INode[]\n}\n\nclass Tree extends Component<IProps, {}> {\n    public renderNode(node, index, root = false) {\n        const { id, name, nodes } = node\n\n        return (\n            <Node\n                id={ index }\n                name={ name }\n                key={ id || index }\n                style={ root ? { padding: 0 } : {} }>\n                { nodes && nodes.map(this.renderNode.bind(this)) }\n            </Node>\n        )\n    }\n\n    public render() {\n        return (this.props.nodes || []).map((node, index) =>\n            this.renderNode(node, index, true)\n        )\n    }\n}\n\nexport default Tree\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport Tree from '../core/Tree'\nimport { Playground, Props } from 'docz'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"tree\"\n    }}>{`Tree`}</h1>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={Tree} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h2>\n    <Playground __position={1} __code={'<Tree\\n  nodes={[\\n    {\\n      id: 0,\\n      name: \\'Tree\\',\\n      nodes: [\\n        {\\n          id: 1,\\n          name: \\'Branch\\',\\n        },\\n        {\\n          id: 2,\\n          name: \\'Branch\\',\\n        },\\n        {\\n          id: 3,\\n          name: \\'Branch\\',\\n          nodes: [\\n            {\\n              id: 5,\\n              name: \\'Leaf\\',\\n            },\\n          ],\\n        },\\n      ],\\n    },\\n  ]}\\n/>'} __scope={{\n      props: this ? this.props : props,\n      Tree,\n      Playground,\n      Props\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n    <Tree nodes={[{\n        id: 0,\n        name: 'Tree',\n        nodes: [{\n          id: 1,\n          name: 'Branch'\n        }, {\n          id: 2,\n          name: 'Branch'\n        }, {\n          id: 3,\n          name: 'Branch',\n          nodes: [{\n            id: 5,\n            name: 'Leaf'\n          }]\n        }]\n      }]} mdxType=\"Tree\" />\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  ","export * from '@material-ui/icons'\n"],"sourceRoot":""}